package sbnz.integracija;
import java.util.List;
import com.sbnz.career.adviser.model.*;


/*
query "Bolesti koje sadrze simptome" (List $symptoms)
	$d: Disease( $ds : symptoms )
	$nSymptoms: Number(intValue >= 1) 
				from accumulate( 
					$s : Symptom( this memberOf $symptoms)
					from $ds;
					count($s)
				)
end
*/

/*
query checkIfPossibleProfession (List $traitsValues, List $professionTraits)
	//$d: Disease( $ds : symptoms )
	$num: Number(intValue >= 3) 
				from accumulate( 
					$t : Trait( $value: getValue(), $value memberOf $traitsValues)
					from $professionTraits;
					count($t)
				)
end

*/


/*

rule "Profession exist test"
	agenda-group "professionsTest"
	no-loop
	lock-on-active
    when
		$personality : Personality($persTraits: getAllTraits(), $mindValue: getMindTrait().getValue())
		$profession : Profession (
			//approved($personality) == true
			$professionTraits: personality.getAllTraits()
		);
		
		
		
		$theList: List() from accumulate (
			$trait: Trait() from $persTraits,
			collectList($trait)
		)
		
		//checkIfPossibleProfession($traitsValues, $professionTraits;); 
         
            
    then
      System.out.println("Profession approved");
      System.out.println($persTraits);
      System.out.println($professionTraits);
      System.out.println($mindValue);
      //System.out.println($traits);
      System.out.println($theList);
      //PossibleProfession possible = new PossibleProfession($profession);
      //insert(possible);
end



/*
$traitsValues: List() from accumulate (             
			Trait($value: getValue()) from $persTraits, 
			collectList($value)
		)  
Number(intValue >= 1) from accumulate(
			$comp: Component (
				name == $name
			) from $componentAllergies,
			count($comp)
		)
		
$traitsValues: List() from accumulate (             
			Trait($value: getValue()) from $persTraits, 
			collectList($value)
		)  
		
		
rule "Possible profession inserted"
	agenda-group "professionsTest"
	salience -100
	no-loop
    when
		PossibleProfession()
            
    then
      System.out.println("Possible profession inserted");
      
end


query chechWineGrapes(Number $num, List allGrapes, List userGrapesIds)    
	 $num := Number(intValue == allGrapes.size()) from accumulate(         
	 Grape($id: id, id memberOf userGrapesIds) from allGrapes, 
	 		init(int count = 0;),
	 		action(count += 1;),
 		    result(count)     ) 
 end
 
 query checkPersonalityProfession(Number $num, Personality $personality, Personality $professionPersonality)
 	$num := Number (intValue >= 3) from accumulate (
 		
 	
 	)
 end

*/


