//created on: 7 May 2020



rule "If there are not possible professions, find and insert them"
	agenda-group "paymentTest"
	no-loop
	lock-on-active
    when
    	$criteriums : Criteriums(personality == false, preferences==false, payment == true)
    	$l : List( size > 0) from collect (Profession())
    	accumulate(
			$p : Profession (
				$payment : payment
			) from $l;
			$max: max($payment)
		)
    	
    	
    	$profession : Profession($pay : payment, $name : name)
    then
    	 System.out.println("Possible profession inserted "+$name);
    	 PossibleProfession possibleProfession = new PossibleProfession($profession);
    	 possibleProfession.increaseScore($pay/$max);
 	  	 insert(possibleProfession);
 	  	 delete($profession);
 	  	 
end

rule "If there are possible professions inserted, caluculate influence of payment"
    agenda-group "paymentTest"
    no-loop
	lock-on-active
    when
    	$l : List( size > 0) from collect (PossibleProfession())
    	accumulate(
			$p : PossibleProfession (
				$payment : profession.payment
			) from $l;
			$max: max($payment)
		)
    	
        $possibleProfession : PossibleProfession($pay : profession.payment, $name : profession.name)
    then
    	System.out.println("Payment perc: "+ $pay/$max + " " +$name);
        $possibleProfession.increaseScore((double) $pay/$max);

end
